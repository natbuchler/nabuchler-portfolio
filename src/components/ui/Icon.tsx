/**
 * Icon Component
 *
 * Reusable icon component supporting both SVG images and inline SVG.
 * Uses design tokens for consistent sizing across the application.
 *
 * @component
 * @example
 * ```tsx
 * <Icon tipo="rosto" size="48" />
 * <Icon tipo="Linkedin" size="64" className="custom-class" />
 * ```
 */

import React from 'react';
import Image from 'next/image';

export interface IconProps {
  /** Icon type to display */
  tipo?: "cy" | "ponto" | "rosto" | "Medium" | "Email" | "CV" | "Linkedin" | "puzzle" | "lamp" | "medal" | "strategy";
  /** Icon size in pixels */
  size?: "32" | "64" | "48" | "124";
  /** Additional CSS classes */
  className?: string;
}

/**
 * Icon component that handles both image-based and inline SVG icons
 */
export default function Icon({ tipo = "rosto", size = "48", className = "" }: IconProps) {
  const sizeClasses = {
    "32": "w-8 h-8",
    "48": "w-12 h-12",
    "64": "w-16 h-16",
    "124": "w-[124px] h-[124px]"
  };

  const iconSources = {
    rosto: "/rosto.svg",
    ponto: "/ponto.svg",
    cy: "/cy.svg",
    Linkedin: "/Linkedin.svg",
    Medium: "/Medium.svg",
    Email: "/Email.svg",
    CV: "/CV.svg",
    puzzle: "/puzzle.svg",
    lamp: "/lamp.svg",
    medal: "/medal.svg",
    strategy: "/strategy.svg",
  };

  // Image-based icons
  if (tipo in iconSources && !['Linkedin', 'Medium', 'Email', 'CV'].includes(tipo)) {
    // Ajuste especial para "rosto" que tem viewBox n√£o-quadrado
    const containerClass = tipo === 'rosto' && size === '32'
      ? 'w-9 h-9 pl-1'
      : sizeClasses[size];

    return (
      <div className={`relative ${containerClass} ${className}`}>
        <Image
          src={iconSources[tipo as keyof typeof iconSources]}
          alt={tipo}
          fill
          className="object-contain"
        />
      </div>
    );
  }

  // Social icons with inline SVG for better color control
  if (tipo === "Linkedin") {
    return (
      <div className={`relative ${sizeClasses[size]} ${className}`}>
        <svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M44.142 0H3.858C1.728 0 0 1.728 0 3.858V44.142C0 46.272 1.728 48 3.858 48H44.142C46.272 48 48 46.272 48 44.142V3.858C48 1.728 46.272 0 44.142 0ZM44.142 44.16C17.274 44.154 3.84 44.148 3.84 44.142C3.846 17.274 3.852 3.84 3.858 3.84C30.726 3.846 44.16 3.852 44.16 3.858C44.154 30.726 44.148 44.16 44.142 44.16ZM7.116 17.994H14.238V40.902H7.116V17.994ZM10.68 14.862C12.954 14.862 14.808 13.014 14.808 10.734C14.808 10.1919 14.7012 9.65511 14.4938 9.15428C14.2863 8.65345 13.9823 8.19838 13.5989 7.81506C13.2156 7.43174 12.7605 7.12768 12.2597 6.92022C11.7589 6.71277 11.2221 6.606 10.68 6.606C10.1379 6.606 9.60112 6.71277 9.10028 6.92022C8.59945 7.12768 8.14438 7.43174 7.76106 7.81506C7.37774 8.19838 7.07368 8.65345 6.86623 9.15428C6.65877 9.65511 6.552 10.1919 6.552 10.734C6.546 13.014 8.394 14.862 10.68 14.862ZM25.818 29.568C25.818 26.58 26.388 23.688 30.09 23.688C33.738 23.688 33.792 27.102 33.792 29.76V40.902H40.908V28.338C40.908 22.17 39.576 17.424 32.37 17.424C28.908 17.424 26.586 19.326 25.632 21.126H25.536V17.994H18.702V40.902H25.818V29.568Z" fill="#c95127"/>
        </svg>
      </div>
    );
  }

  if (tipo === "Medium") {
    return (
      <div className={`relative ${sizeClasses[size]} ${className}`}>
        <svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M8.42133 2.66667H39.5787C42.7573 2.66667 45.3333 5.24267 45.3333 8.42133V17.6347C43.7116 18.0579 42.2714 18.9966 41.2293 20.3093C39.9707 21.872 39.208 23.9813 39.0213 26.352C38.9822 26.8249 38.9671 27.2978 38.976 27.7707C39.0853 32.472 41.3227 36.3467 45.3333 37.2373V39.5787C45.3319 41.1045 44.7252 42.5674 43.6463 43.6463C42.5674 44.7252 41.1045 45.3319 39.5787 45.3333H8.42133C6.89553 45.3319 5.43263 44.7252 4.35373 43.6463C3.27483 42.5674 2.66808 41.1045 2.66667 39.5787V8.42133C2.66667 5.24267 5.24267 2.66667 8.42133 2.66667ZM48 8.42133C47.9986 6.18829 47.1109 4.04711 45.5319 2.46811C43.9529 0.889112 41.8117 0.00141287 39.5787 0H8.42133C6.18829 0.00141287 4.04711 0.889112 2.46811 2.46811C0.889112 4.04711 0.00141287 6.18829 0 8.42133V39.5787C0.00141287 41.8117 0.889112 43.9529 2.46811 45.5319C4.04711 47.1109 6.18829 47.9986 8.42133 48H39.5787C41.8117 47.9986 43.9529 47.1109 45.5319 45.5319C47.1109 43.9529 47.9986 41.8117 48 39.5787V8.42133ZM45.3333 19.4613V24.7493H43.6907C43.7947 22.4373 44.3653 20.536 45.3333 19.4613ZM45.3333 25.7653V31.2667C44.1573 29.8987 43.4693 27.9333 43.592 25.7653H45.3333ZM39.192 11.4667L39.232 11.4587V11.1653H31.4987L24.3253 28.0347L17.1467 11.1653H8.816V11.4587L8.85333 11.4667C10.264 11.7867 10.9813 12.2613 10.9813 13.9733V34.0267C10.9813 35.7387 10.2613 36.2133 8.848 36.5333L8.81333 36.5387V36.832H14.4667V36.5387L14.4267 36.5333C13.016 36.2133 12.2987 35.7387 12.2987 34.0267V15.136L21.52 36.8347H22.0427L31.5333 14.5307V34.52C31.4107 35.8747 30.7013 36.2933 29.424 36.5813L29.3867 36.5893V36.88H39.232V36.5867L39.192 36.5813C37.912 36.2933 37.1867 35.8747 37.0667 34.52L37.0587 13.9733H37.0667C37.0667 12.2613 37.784 11.7867 39.192 11.4667Z" fill="#c95127"/>
        </svg>
      </div>
    );
  }

  if (tipo === "Email") {
    return (
      <div className={`relative ${sizeClasses[size]} ${className}`}>
        <svg width="48" height="48" viewBox="0 0 105.37 134" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M11.33,17.63C14.12,10.52,22.16,1.44,26.59.34c2.5-.62,9.77-.2,12.79-.17,17.82.16,36.63.89,54.35,2.12,4.45.31,5.58-.06,5.81,4.66.59,12.2-.03,25.08.26,37.41.49,20.68,1.63,41.35,3.31,61.95l2.27,21.8-.03.32c-.78,1.03-.64,1.62-2.07,1.95-4.48,1.05-10.98.09-15.67.97-13.14,2.44-45.43.53-74.5,2.64-3.78.27-4.86-4.45-5.15-5.49-.48-1.68-9.27-50.79-7.78-62.04,2.08-15.74,9.76-45.26,11.17-48.83ZM94.31,7.56l-61.42-2.22c3.44,4,7.66,7.47,12.26,10.08,1.79,1.02,5.62,2.09,6.34,3.91,1.1,2.78-2.56,3.42-4.24,4.41-16.84,9.89-31.91,27.91-41.52,44.72,1.34,20.28,5.55,40.22,6.9,60.5l87.18-3.34c-4.06-39.2-5.36-78.63-5.5-118.07ZM43.39,19.94c-6.5-3.25-12.03-8.26-16.55-13.9-5.49,4.3-8.76,11.07-11.23,17.48-3.88,10.11-6.12,20.99-7.99,31.64l7.44-9.38c8.36-9.73,17.62-18.74,28.32-25.84Z" fill="#c95127"/>
        </svg>
      </div>
    );
  }

  if (tipo === "CV") {
    return (
      <div className={`relative ${sizeClasses[size]} ${className}`}>
        <svg width="48" height="48" viewBox="0 0 105.37 134" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M11.33,17.63C14.12,10.52,22.16,1.44,26.59.34c2.5-.62,9.77-.2,12.79-.17,17.82.16,36.63.89,54.35,2.12,4.45.31,5.58-.06,5.81,4.66.59,12.2-.03,25.08.26,37.41.49,20.68,1.63,41.35,3.31,61.95l2.27,21.8-.03.32c-.78,1.03-.64,1.62-2.07,1.95-4.48,1.05-10.98.09-15.67.97-13.14,2.44-45.43.53-74.5,2.64-3.78.27-4.86-4.45-5.15-5.49-.48-1.68-9.27-50.79-7.78-62.04,2.08-15.74,9.76-45.26,11.17-48.83ZM94.31,7.56l-61.42-2.22c3.44,4,7.66,7.47,12.26,10.08,1.79,1.02,5.62,2.09,6.34,3.91,1.1,2.78-2.56,3.42-4.24,4.41-16.84,9.89-31.91,27.91-41.52,44.72,1.34,20.28,5.55,40.22,6.9,60.5l87.18-3.34c-4.06-39.2-5.36-78.63-5.5-118.07ZM43.39,19.94c-6.5-3.25-12.03-8.26-16.55-13.9-5.49,4.3-8.76,11.07-11.23,17.48-3.88,10.11-6.12,20.99-7.99,31.64l7.44-9.38c8.36-9.73,17.62-18.74,28.32-25.84Z" fill="#c95127"/>
        </svg>
      </div>
    );
  }

  // Fallback for undefined icons
  return (
    <div className={`relative ${sizeClasses[size]} ${className} bg-[#ad8a6c] rounded-lg flex items-center justify-center`}>
      <span className="text-[#421d13] font-medium text-sm">{tipo}</span>
    </div>
  );
}
